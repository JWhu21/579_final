{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useCountdown = targetDate => {\n  _s();\n  const countDownDate = new Date(targetDate).getTime();\n  const [countDown, setCountDown] = useState(countDownDate - new Date().getTime());\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCountDown(countDownDate - new Date().getTime());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [countDownDate]);\n  return getReturnValues(countDown);\n};\n_s(useCountdown, \"+9zWhIOWADc8hK60aUgFV91+m8I=\");\nconst getReturnValues = countDown => {\n  // Calculate time left\n  const days = Math.floor(countDown / (1000 * 60 * 60 * 24));\n  const hours = Math.floor(countDown % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n  const minutes = Math.floor(countDown % (1000 * 60 * 60) / (1000 * 60));\n  const seconds = Math.floor(countDown % (1000 * 60) / 1000);\n  return {\n    days,\n    hours,\n    minutes,\n    seconds\n  };\n};\nexport default useCountdown;","map":{"version":3,"names":["useState","useEffect","useCountdown","targetDate","_s","countDownDate","Date","getTime","countDown","setCountDown","interval","setInterval","clearInterval","getReturnValues","days","Math","floor","hours","minutes","seconds"],"sources":["/Users/jiaweihu/Desktop/SI_579_FinalProject/task-manager/src/components/useCountdown.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useCountdown = (targetDate) => {\n  const countDownDate = new Date(targetDate).getTime();\n\n  const [countDown, setCountDown] = useState(\n    countDownDate - new Date().getTime()\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCountDown(countDownDate - new Date().getTime());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [countDownDate]);\n\n  return getReturnValues(countDown);\n};\n\nconst getReturnValues = (countDown) => {\n  // Calculate time left\n  const days = Math.floor(countDown / (1000 * 60 * 60 * 24));\n  const hours = Math.floor(\n    (countDown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n  );\n  const minutes = Math.floor((countDown % (1000 * 60 * 60)) / (1000 * 60));\n  const seconds = Math.floor((countDown % (1000 * 60)) / 1000);\n\n  return { days, hours, minutes, seconds };\n};\n\nexport default useCountdown;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,YAAY,GAAIC,UAAU,IAAK;EAAAC,EAAA;EACnC,MAAMC,aAAa,GAAG,IAAIC,IAAI,CAACH,UAAU,CAAC,CAACI,OAAO,CAAC,CAAC;EAEpD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CACxCK,aAAa,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CACrC,CAAC;EAEDN,SAAS,CAAC,MAAM;IACd,MAAMS,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCF,YAAY,CAACJ,aAAa,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;IACpD,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMK,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACL,aAAa,CAAC,CAAC;EAEnB,OAAOQ,eAAe,CAACL,SAAS,CAAC;AACnC,CAAC;AAACJ,EAAA,CAhBIF,YAAY;AAkBlB,MAAMW,eAAe,GAAIL,SAAS,IAAK;EACrC;EACA,MAAMM,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACR,SAAS,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EAC1D,MAAMS,KAAK,GAAGF,IAAI,CAACC,KAAK,CACrBR,SAAS,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CACvD,CAAC;EACD,MAAMU,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAER,SAAS,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;EACxE,MAAMW,OAAO,GAAGJ,IAAI,CAACC,KAAK,CAAER,SAAS,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,IAAI,CAAC;EAE5D,OAAO;IAAEM,IAAI;IAAEG,KAAK;IAAEC,OAAO;IAAEC;EAAQ,CAAC;AAC1C,CAAC;AAED,eAAejB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}